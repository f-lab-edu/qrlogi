services:
  redis:
    image: redis:7.2
    container_name: qr-redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
  qr-db-master: # MASTER
    image: bitnami/mysql:8.0
    container_name: qr-db-master
    ports:
      - "3307:3306"
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl
      - MYSQL_REPLICATION_PASSWORD=replpass
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=qrlogidb
    volumes:
      - mysql_master_data:/bitnami/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass" ]
      interval: 10s
      timeout: 5s
      retries: 5

  qr-db-slave: # SLAVE
    image: bitnami/mysql:8.0
    container_name: qr-db-slave
    ports:
      - "3308:3306"
    depends_on:
      - qr-db-master
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl
      - MYSQL_REPLICATION_PASSWORD=replpass
      - MYSQL_MASTER_HOST=qr-db-master
      - MYSQL_MASTER_ROOT_PASSWORD=rootpass
    volumes:
      - mysql_slave_data:/bitnami/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass" ]
      interval: 10s
      timeout: 5s
      retries: 5

  qr-api: # Spring application
    build:
      context:  ../
      dockerfile: Dockerfile
    container_name: qr-spring-app
    depends_on:
      redis:
        condition: service_healthy
      qr-db-master:
        condition: service_healthy
      qr-db-slave:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

volumes:
  mysql_master_data: {}
  mysql_slave_data: {}
